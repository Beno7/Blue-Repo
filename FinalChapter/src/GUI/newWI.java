/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Connection.DBconnection;
import Implementation.BundleImpl;
import Logic.BreakDown;
import Logic.Item;
import Logic.Manager;
import Logic.OBreakDownManager;
import Logic.Transaction;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raffy
 */
public class newWI extends javax.swing.JFrame {

    /**
     * Creates new form newWI
     */
    DefaultTableModel tableQuery1 = new DefaultTableModel();
        private Connection connection;
    private DBconnection dBConnection;
    public newWI() {
        initComponents();
                tableQuery1 = (DefaultTableModel)jTable1.getModel();
            try {
            dBConnection = DBconnection.getInstance();
            connection = dBConnection.getConnection();

            String query = "select supplier.name, item.brandName, item.name, item.stock, prices.userPrice "
                    + "from prices "
                    + "inner join item "
                    + "on prices.itemId = item.itemId "
                    + "inner join supplier "
                    + "on prices.supplierId = supplier.supplierID";
            PreparedStatement preparedStatement = connection.prepareStatement(query);

            ResultSet rs = preparedStatement.executeQuery();
            ArrayList<Item> bundle = new ArrayList();
            while (rs.next()) {
                tableQuery1.insertRow(tableQuery1.getRowCount(), new Object[]{rs.getString("supplier.name"), rs.getString("brandName"), rs.getString("item.name"), rs.getInt("stock"), rs.getDouble("userprice")});
            } 
        } catch (SQLException ex) {
            Logger.getLogger(BundleImpl.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        y = new javax.swing.JButton();
        invoice = new javax.swing.JTextField();
        brand = new javax.swing.JTextField();
        item = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        n = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 720));
        setMinimumSize(new java.awt.Dimension(900, 720));
        setPreferredSize(new java.awt.Dimension(900, 720));
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier", "Brand Name", "Item Name", "Stock", "User Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 90, 790, 330);

        y.setOpaque(false);
        y.setContentAreaFilled(false);
        y.setBorderPainted(false);
        y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yActionPerformed(evt);
            }
        });
        getContentPane().add(y);
        y.setBounds(320, 640, 130, 40);

        invoice.setBorder(null);
        invoice.setBackground(new Color(217, 219, 223));
        getContentPane().add(invoice);
        invoice.setBounds(120, 450, 240, 28);

        brand.setBorder(null);
        brand.setBackground(new Color(217, 219, 223));
        getContentPane().add(brand);
        brand.setBounds(550, 450, 250, 28);

        item.setBorder(null);
        item.setBackground(new Color(217, 219, 223));
        getContentPane().add(item);
        item.setBounds(550, 520, 260, 28);

        amount.setBorder(null);
        amount.setBackground(new Color(217, 219, 223));
        getContentPane().add(amount);
        amount.setBounds(550, 580, 260, 28);

        n.setToolTipText("");
        n.setOpaque(false);
        n.setContentAreaFilled(false);
        n.setBorderPainted(false);
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });
        getContentPane().add(n);
        n.setBounds(470, 640, 150, 40);

        error.setText(" ");
        getContentPane().add(error);
        error.setBounds(660, 650, 160, 16);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/walk-in-trans.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -4, 900, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yActionPerformed
        Manager mngr = new Manager();
        String bN, n, iV;
        OBreakDownManager oBD = new OBreakDownManager();
        Transaction wI;
        Item a, bundle;
        int q, needed = 0, mult = 0;
        boolean me;
        System.out.print("Enter Invoice Number: ");
        iV = invoice.getText();
        if((mngr.getOT(iV)!=null)||(mngr.getST(iV)!=null)||(mngr.getWalkInTransaction(iV)!=null))
            //System.out.println("Error, Transaction with same invoice already exists\nEnter again");
            error.setText("Error, Transaction with same invoice already exists");
        wI = new Transaction(iV, new Date());
        me = true;
        mult = 0;
        System.out.println("Enter brandName: ");
        bN = brand.getText();
        System.out.println("Enter Name: ");
        n = item.getText();
        System.out.print("Enter quantity: ");
        q = Integer.parseInt(amount.getText());
        if((mngr.getI(n, bN)!=null)&&!oBD.checkBreakDownItem(bN, n)){
            a = mngr.getI(n, bN);
            bundle = mngr.getLeast(n, bN);
            needed = a.getStock();
            if(needed<=q){
                while(needed<=q){
                    System.out.print("hey");
                    if(mult<=bundle.getStock()){
                        needed+=bundle.getQtyPerBundle();
                        mult++;
                    }
                    else{///di ko alam kung gagana ito
                        me = false;
                        break;
                    }
                }
                mngr.updateStock(n, bN, a.getStock()+(mult*bundle.getQtyPerBundle()));
                mngr.subtractStock(bundle.getItemID(), mult);
            }
            if(me){
                mngr.updateStock(n, bN, a.getStock()-q);
                oBD.addBDTemp(new BreakDown(iV, q, a.getItemID(), mngr.getI(n, bN).getUnitPrice()));
                wI.setTotal(wI.getTotal()+(q*mngr.getI(n, bN).getUnitPrice()));
                oBD.printBreakDownTempItem();
            } else{
                error.setText("Error, insufficient supply");
            }
        }
        else if(oBD.checkBreakDownItem(bN, n)){
            System.out.print("You already added that item to this transaction");
        }
            mngr.addWalkInTransaction(wI);
            oBD.commitBreakDown();
        System.out.print("Enter again? (y/n):");
    }//GEN-LAST:event_yActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        error.setText("Add another item!");
        brand.setText(null);
        item.setText(null);
        invoice.setText(null);
        amount.setText(null);
    }//GEN-LAST:event_nActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newWI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newWI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newWI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newWI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newWI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JTextField brand;
    private javax.swing.JLabel error;
    private javax.swing.JTextField invoice;
    private javax.swing.JTextField item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton n;
    private javax.swing.JButton y;
    // End of variables declaration//GEN-END:variables
}
