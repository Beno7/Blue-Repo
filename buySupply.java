/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Connection.DBconnection;
import Connection.DBconnectionImpl;
import Logic.Bundle;
import Logic.BundleManager;
import Logic.Item;
import Logic.Office;
import Logic.OfficeManager;
import Logic.STransaction;
import Logic.Supplier;
import Logic.SupplierManager;
import Logic.TransactionDB;
import Logic.WRInventory;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raffy
 */
public class buySupply extends javax.swing.JFrame {

	Item i;
	Bundle b;
	String s, s1, s2, b1;
	int ctr, count;
	Double d;
	Calendar c;
	Date d1;
	Supplier suppT;
	STransaction sT = null;
    private	Scanner inS;
    private	String sN, temp;//supplier name
    private	String bN, N;//Items primary key
    private String u;// unit of bundle
    private String oN; // office name
    private String iV; // inVoice
    private Office tO;
   //private Bundle c;
    private int m;// measurement of a bundle
    private Double pSP, sP;// sell price of a package, suppliers price for the item
    private	Double price;//price of Item
    private	WRInventory wR;//instance of inventory
    private	Item tempI;//temporary Item variable
    private	int bool;//to check if supplier exists in db
    private OfficeManager oM;
    private TransactionDB sTM;
    private String item;
        
    SupplierManager sM = new SupplierManager();
    BundleManager bM = new BundleManager();
    DefaultListModel packageList = new DefaultListModel();
    DefaultListModel shoppingCart = new DefaultListModel();
    DefaultTableModel supplyListQuery;
    DefaultTableModel shoppingTable;
    DefaultListModel shopping = new DefaultListModel(); 
    
    public buySupply(){
        initComponents();
        DBconnectionImpl dBConnection;
        Connection connection;
        DefaultTableModel itemListQuery;
        itemListQuery = (DefaultTableModel)itemTable.getModel();
            try {
                dBConnection = DBconnection.getInstance();
                connection = dBConnection.getConnection();
                String query = "select * from prices";
                PreparedStatement preparedStatement = connection.prepareStatement(query);
                ResultSet rs = preparedStatement.executeQuery();
                while (rs.next()) {
                    itemListQuery.insertRow(itemListQuery.getRowCount(), new Object[]{rs.getString("name"), rs.getString("brandName")});
                }   
            } catch (SQLException ex) {
                Logger.getLogger(buySupply.class.getName()).log(Level.SEVERE, null, ex);
            }
        System.out.println("added");
        //itemList.setModel(itemListQuery);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buyButton = new javax.swing.JButton();
        generatePackageButton = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        sellToCustomerButton1 = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        viewingButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        itemField = new javax.swing.JTextField();
        brandField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        invoiceField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        supplyTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        itemLabel = new javax.swing.JLabel();
        brandLabel = new javax.swing.JLabel();
        invoiceLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        termsLabel = new javax.swing.JLabel();
        termsField = new javax.swing.JTextField();
        BG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(915, 708));
        setMinimumSize(new java.awt.Dimension(915, 708));
        setPreferredSize(new java.awt.Dimension(915, 708));
        setResizable(false);
        getContentPane().setLayout(null);

        buyButton.setFont(new java.awt.Font("Myriad Pro", 0, 13)); // NOI18N
        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(buyButton);
        buyButton.setBounds(760, 640, 110, 23);

        generatePackageButton.setFont(new java.awt.Font("Myriad Pro", 0, 13)); // NOI18N
        generatePackageButton.setText("Generate");
        generatePackageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePackageButtonActionPerformed(evt);
            }
        });
        getContentPane().add(generatePackageButton);
        generatePackageButton.setBounds(760, 320, 100, 29);

        menuButton.setOpaque(false);
        menuButton.setContentAreaFilled(false);
        menuButton.setBorderPainted(false);
        menuButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });
        getContentPane().add(menuButton);
        menuButton.setBounds(10, 170, 50, 40);

        sellToCustomerButton1.setOpaque(false);
        sellToCustomerButton1.setContentAreaFilled(false);
        sellToCustomerButton1.setBorderPainted(false);
        sellToCustomerButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        sellToCustomerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellToCustomerButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(sellToCustomerButton1);
        sellToCustomerButton1.setBounds(250, 60, 140, 40);

        settingsButton.setOpaque(false);
        settingsButton.setContentAreaFilled(false);
        settingsButton.setBorderPainted(false);
        settingsButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        getContentPane().add(settingsButton);
        settingsButton.setBounds(10, 250, 50, 40);

        viewingButton.setOpaque(false);
        viewingButton.setContentAreaFilled(false);
        viewingButton.setBorderPainted(false);
        viewingButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        viewingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewingButtonActionPerformed(evt);
            }
        });
        getContentPane().add(viewingButton);
        viewingButton.setBounds(10, 530, 50, 40);

        exitButton.setOpaque(false);
        exitButton.setContentAreaFilled(false);
        exitButton.setBorderPainted(false);
        exitButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton);
        exitButton.setBounds(10, 610, 50, 40);

        jScrollPane1.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N

        itemTable.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM", "BRAND"
            }
        ));
        jScrollPane1.setViewportView(itemTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(100, 180, 540, 230);

        itemField.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        getContentPane().add(itemField);
        itemField.setBounds(750, 270, 120, 21);

        brandField.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        getContentPane().add(brandField);
        brandField.setBounds(750, 220, 120, 21);

        amountField.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        getContentPane().add(amountField);
        amountField.setBounds(760, 470, 110, 21);

        invoiceField.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        getContentPane().add(invoiceField);
        invoiceField.setBounds(760, 570, 110, 21);

        supplyTable.setBackground(new java.awt.Color(124, 119, 119));
        supplyTable.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        supplyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUPPLIER", "PACKAGE", "PRICE"
            }
        ));
        jScrollPane4.setViewportView(supplyTable);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(100, 430, 540, 230);

        jLabel1.setFont(new java.awt.Font("Myriad Pro", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Please click on a package before pressing buy");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(660, 610, 220, 13);

        itemLabel.setFont(new java.awt.Font("Myriad Pro", 0, 12)); // NOI18N
        itemLabel.setForeground(new java.awt.Color(51, 51, 51));
        itemLabel.setText("Item:");
        getContentPane().add(itemLabel);
        itemLabel.setBounds(690, 260, 25, 40);

        brandLabel.setFont(new java.awt.Font("Myriad Pro", 0, 12)); // NOI18N
        brandLabel.setForeground(new java.awt.Color(51, 51, 51));
        brandLabel.setText("Brand:");
        getContentPane().add(brandLabel);
        brandLabel.setBounds(690, 220, 51, 20);

        invoiceLabel.setFont(new java.awt.Font("Myriad Pro", 0, 12)); // NOI18N
        invoiceLabel.setForeground(new java.awt.Color(51, 51, 51));
        invoiceLabel.setText("Invoice:");
        getContentPane().add(invoiceLabel);
        invoiceLabel.setBounds(690, 570, 50, 20);

        amountLabel.setFont(new java.awt.Font("Myriad Pro", 0, 12)); // NOI18N
        amountLabel.setForeground(new java.awt.Color(51, 51, 51));
        amountLabel.setText("Amount:");
        getContentPane().add(amountLabel);
        amountLabel.setBounds(690, 470, 60, 30);

        termsLabel.setFont(new java.awt.Font("Myriad Pro", 0, 12)); // NOI18N
        termsLabel.setForeground(new java.awt.Color(51, 51, 51));
        termsLabel.setText("Terms:");
        getContentPane().add(termsLabel);
        termsLabel.setBounds(690, 520, 40, 20);

        termsField.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        getContentPane().add(termsField);
        termsField.setBounds(760, 520, 110, 21);

        BG.setIcon(new javax.swing.ImageIcon("C:\\Users\\Raffy\\Desktop\\FinalChapter\\src\\images\\Introse New Form Designs\\Buy from Supplier.png")); // NOI18N
        BG.setMaximumSize(new java.awt.Dimension(900, 708));
        BG.setMinimumSize(new java.awt.Dimension(900, 708));
        BG.setPreferredSize(new java.awt.Dimension(900, 708));
        getContentPane().add(BG);
        BG.setBounds(0, 0, 900, 683);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generatePackageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePackageButtonActionPerformed
        DBconnectionImpl dBConnection;
        Connection connection;
        supplyListQuery = (DefaultTableModel)supplyTable.getModel();
        s1 = itemField.getText().toUpperCase();
        s2 = brandField.getText().toUpperCase();
            try {
                dBConnection = DBconnection.getInstance();
                connection = dBConnection.getConnection();
                String query = "select * from Bundle where name = '" + s1 + "' && brandName = '" + s2 + "'" ;
                PreparedStatement preparedStatement = connection.prepareStatement(query);
                ResultSet rs = preparedStatement.executeQuery();
                while (rs.next()) {
                    supplyListQuery.insertRow(supplyListQuery.getRowCount(), new Object[]{rs.getString("supplierName"), rs.getString("unit"), rs.getString("packSellPrice")});
                }   
            } catch (SQLException ex) {
                Logger.getLogger(buySupply.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_generatePackageButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        int column1 = 1, column = 0;
        supplyListQuery = (DefaultTableModel)supplyTable.getModel();
        s1 = brandField.getText().toUpperCase();
        s2 = itemField.getText().toUpperCase();
        b1 = String.valueOf(supplyListQuery.getValueAt(supplyTable.getSelectedRow(), column1));
        b = bM.getB(s1, s2, b1);
        s = String.valueOf(supplyListQuery.getValueAt(supplyTable.getSelectedRow(), column));
        d = b.elemHM(s);
        c = new GregorianCalendar();
	c.set(Calendar.HOUR_OF_DAY, 0); //anything 0 - 23
	c.set(Calendar.MINUTE, 0);
	c.set(Calendar.SECOND, 0);
	d1 = c.getTime(); 
        iV = invoiceField.getText();
	sT = new STransaction(iV, d1, s);
        count = Integer.parseInt(amountField.getText());
        sT.setTerm(Integer.parseInt(termsField.getText()));
        sT.addSell(b, d, count);
        sT.updateStocks();
        sM.getS(s).addSTransaction(sT);
        sT.updateBundleList();
	//sM.printAllTransactions();
        System.out.println(s);
        sM.getS(s).addSTransaction(sT);
        promptSuccess ok = new promptSuccess();
        ok.setVisible(true);
    }//GEN-LAST:event_buyButtonActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void sellToCustomerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellToCustomerButton1ActionPerformed
        sellSupply sell = new sellSupply();
        sell.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_sellToCustomerButton1ActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void viewingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewingButtonActionPerformed
        viewPerSupplier viewing = new viewPerSupplier();
        viewing.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewingButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buySupply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buySupply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buySupply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buySupply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG;
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField brandField;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JButton buyButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton generatePackageButton;
    private javax.swing.JTextField invoiceField;
    private javax.swing.JLabel invoiceLabel;
    private javax.swing.JTextField itemField;
    private javax.swing.JLabel itemLabel;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton menuButton;
    private javax.swing.JButton sellToCustomerButton1;
    private javax.swing.JButton settingsButton;
    private javax.swing.JTable supplyTable;
    private javax.swing.JTextField termsField;
    private javax.swing.JLabel termsLabel;
    private javax.swing.JButton viewingButton;
    // End of variables declaration//GEN-END:variables
}
