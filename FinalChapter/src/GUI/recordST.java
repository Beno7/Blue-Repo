/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Connection.DBconnection;
import Implementation.PriceImpl;
import Implementation.SupplierImpl;
import Logic.BreakDown;
import Logic.Item;
import Logic.Manager;
import Logic.PriceBean;
import Logic.SBreakDownManager;
import Logic.Supplier;
import Logic.SupplierTransaction;
import java.awt.Color;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raffy
 */
public class recordST extends javax.swing.JFrame {

    /**
     * Creates new form recordST
     */
    DefaultTableModel tableQuery1 = new DefaultTableModel();
    DefaultTableModel tableQuery2 = new DefaultTableModel();
    DefaultTableModel tableQuery3 = new DefaultTableModel();
    private Connection connection;
    private DBconnection dBConnection;
    
    public recordST() {
        initComponents();
        try {
                    tableQuery1 = (DefaultTableModel)itemtable.getModel();
                    dBConnection = DBconnection.getInstance();
                    connection = dBConnection.getConnection();
                    String query = "select s.name, i.brandName, i.name, i.stock, i.unit from supplier as s "
                            + "inner join prices as p "
                            + "on p.supplierId = s.supplierId "
                            + "inner join item as i "
                            + "on i.itemId = p.itemId;";
                    PreparedStatement preparedStatement = connection.prepareStatement(query);
                    ResultSet rs = preparedStatement.executeQuery();
                    ArrayList<Item> bundle = new ArrayList();
                    while (rs.next()) {
                        tableQuery1.insertRow(tableQuery1.getRowCount(), new Object[]{
                            rs.getString("s.name"),
                            rs.getString("brandName"),
                            rs.getString("i.name"),
                            rs.getInt("stock"),
                            rs.getString("unit")
                        });
                    } 
        } catch (SQLException ex) {
            Logger.getLogger(PriceImpl.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        supplier = new javax.swing.JTextField();
        invoice = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        terms = new javax.swing.JTextField();
        brand = new javax.swing.JTextField();
        item = new javax.swing.JTextField();
        unit = new javax.swing.JTextField();
        confirm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemtable = new javax.swing.JTable();
        error = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 720));
        setMinimumSize(new java.awt.Dimension(900, 720));
        setPreferredSize(new java.awt.Dimension(900, 720));
        setResizable(false);
        getContentPane().setLayout(null);

        supplier.setBorder(null);
        supplier.setBackground(new Color(217, 219, 223));
        getContentPane().add(supplier);
        supplier.setBounds(700, 459, 140, 30);

        invoice.setBorder(null);
        invoice.setBackground(new Color(217, 219, 223));
        getContentPane().add(invoice);
        invoice.setBounds(700, 505, 140, 20);

        quantity.setBorder(null);
        quantity.setBackground(new Color(217, 219, 223));
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        getContentPane().add(quantity);
        quantity.setBounds(700, 549, 140, 30);

        terms.setBorder(null);
        terms.setBackground(new Color(217, 219, 223));
        getContentPane().add(terms);
        terms.setBounds(700, 590, 140, 30);

        brand.setBorder(null);
        brand.setBackground(new Color(217, 219, 223));
        getContentPane().add(brand);
        brand.setBounds(230, 462, 140, 30);

        item.setBorder(null);
        item.setBackground(new Color(217, 219, 223));
        getContentPane().add(item);
        item.setBounds(230, 511, 140, 20);

        unit.setBorder(null);
        unit.setBackground(new Color(217, 219, 223));
        getContentPane().add(unit);
        unit.setBounds(230, 557, 140, 30);

        confirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirm.setOpaque(false);
        confirm.setContentAreaFilled(false);
        confirm.setBorderPainted(false);
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        getContentPane().add(confirm);
        confirm.setBounds(400, 620, 140, 60);

        itemtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier Name", "Brand Name", "Item Name", "Stock", "Unit"
            }
        ));
        jScrollPane1.setViewportView(itemtable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 50, 780, 380);

        error.setForeground(new java.awt.Color(255, 0, 0));
        error.setText(" ");
        error.setToolTipText("");
        getContentPane().add(error);
        error.setBounds(570, 650, 240, 20);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/record.jpg"))); // NOI18N
        background.setMaximumSize(new java.awt.Dimension(900, 750));
        background.setMinimumSize(new java.awt.Dimension(900, 750));
        background.setPreferredSize(new java.awt.Dimension(900, 735));
        background.setRequestFocusEnabled(false);
        getContentPane().add(background);
        background.setBounds(0, 0, 900, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        int t, q;
        Manager mngr = new Manager();
	BigInteger bID, sID;
	Item b;
        String temp;
        String bN, n, u, iV;
	Supplier s;
	SupplierTransaction sT;
        sID = null;
	mngr.printNames();
        bN = brand.getText().toUpperCase();
        n = item.getText().toUpperCase();
        mngr.printBundle(bN, n);
        u = unit.getText().toUpperCase();
        System.out.print("Enter Supplier: ");
        s = mngr.getS(supplier.getText().toUpperCase());
        iV = invoice.getText();
        if((mngr.getOT(iV)!=null)||(mngr.getST(iV)!=null)){
            //System.out.println("error, transaction with that invoice already exists");
            error.setText("Error! Invoice already exists");
            System.out.println("PASOK2");
        }
        else if(supplier.getText().equals("") || iV.equals("") || quantity.getText().equals("") || terms.getText().equals("") || brand.getText().equals("") || item.getText().equals("") || unit.getText().equals("")){
            error.setText("Error! Missing field or incorrect input");
            System.out.println("HELLO");
            System.out.println("PASOK1");
        }
        else if(s!=null){
            sID = s.getID();
                       System.out.println("PASOK");
            bID = mngr.getB(bN, n, u).getItemID();
            mngr.printPriceBeans(bID);
            t = Integer.parseInt(terms.getText());
            SBreakDownManager sBD = new SBreakDownManager(iV);
            q = Integer.parseInt(quantity.getText());
            sT = new SupplierTransaction(iV, q*mngr.getSupplierPrice(bID, sID), new Date(), s.getName(), t, sID);
            sT.addBreakDownTemp(new BreakDown(iV, q, bID, mngr.getSupplierPrice(bID, sID)));
            sT.setTotal(sT.getTotal()+(q*mngr.getSupplierPrice(bID, sID)));
            sT.printBreakDownTemp();
            mngr.addSTransaction(sT);
            sT.commitBreakDown();
            mngr.printAllSupplierTrans();
            System.out.println("Transaction Complete!");
            this.dispose();
        }
        //if((mngr.getOT(iV)!=null)||(mngr.getST(iV)!=null)){/*error exisitng invoice*/}

    }//GEN-LAST:event_confirmActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look abackground setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recordST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recordST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recordST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recordST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recordST().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JTextField brand;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel error;
    private javax.swing.JTextField invoice;
    private javax.swing.JTextField item;
    private javax.swing.JTable itemtable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField supplier;
    private javax.swing.JTextField terms;
    private javax.swing.JTextField unit;
    // End of variables declaration//GEN-END:variables
}
